$date
	Tue Jun 11 22:55:05 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 8 ! WRITEDATA [7:0] $end
$var wire 1 " WRITE $end
$var wire 8 # READDATA [7:0] $end
$var wire 1 $ READ $end
$var wire 32 % PC [31:0] $end
$var wire 32 & INSTRUCTION [31:0] $end
$var wire 1 ' BUSYWAIT $end
$var wire 8 ( ADDRESS [7:0] $end
$var reg 1 ) CLK $end
$var reg 1 * RESET $end
$scope module mem_array $end
$var wire 1 ) clock $end
$var wire 1 * reset $end
$var wire 8 + writedata [7:0] $end
$var wire 1 " write $end
$var wire 1 $ read $end
$var wire 8 , address [7:0] $end
$var reg 1 ' busywait $end
$var reg 1 - readaccess $end
$var reg 8 . readdata [7:0] $end
$var reg 1 / writeaccess $end
$var integer 32 0 i [31:0] $end
$upscope $end
$scope module mycpu $end
$var wire 8 1 ADDRESS [7:0] $end
$var wire 1 ' BUSYWAIT $end
$var wire 1 ) CLK $end
$var wire 32 2 INSTRUCTION [31:0] $end
$var wire 8 3 READDATA [7:0] $end
$var wire 1 * RESET $end
$var wire 8 4 WRITEDATA [7:0] $end
$var wire 8 5 registerOp [7:0] $end
$var wire 8 6 negatedOp [7:0] $end
$var wire 1 7 flowSelect $end
$var wire 1 8 ZERO $end
$var wire 3 9 WRITEREG [2:0] $end
$var wire 32 : TARGET [31:0] $end
$var wire 8 ; REGOUT2 [7:0] $end
$var wire 8 < REGOUT1 [7:0] $end
$var wire 8 = REGIN [7:0] $end
$var wire 3 > READREG2 [2:0] $end
$var wire 3 ? READREG1 [2:0] $end
$var wire 32 @ PCplus4 [31:0] $end
$var wire 32 A PCout [31:0] $end
$var wire 8 B OPERAND2 [7:0] $end
$var wire 8 C OFFSET [7:0] $end
$var wire 8 D IMMEDIATE [7:0] $end
$var wire 8 E ALURESULT [7:0] $end
$var reg 3 F ALUOP [2:0] $end
$var reg 1 G BRANCH $end
$var reg 1 H JUMP $end
$var reg 8 I OPCODE [7:0] $end
$var reg 32 J PC [31:0] $end
$var reg 1 $ READ $end
$var reg 1 " WRITE $end
$var reg 1 K WRITEENABLE $end
$var reg 1 L dataSelect $end
$var reg 1 M immSelect $end
$var reg 1 N signSelect $end
$scope module datamux $end
$var wire 8 O IN2 [7:0] $end
$var wire 1 L SELECT $end
$var wire 8 P IN1 [7:0] $end
$var reg 8 Q OUT [7:0] $end
$upscope $end
$scope module flowctrlmux $end
$var wire 1 7 SELECT $end
$var wire 32 R IN2 [31:0] $end
$var wire 32 S IN1 [31:0] $end
$var reg 32 T OUT [31:0] $end
$upscope $end
$scope module immediateMUX $end
$var wire 8 U IN2 [7:0] $end
$var wire 1 M SELECT $end
$var wire 8 V IN1 [7:0] $end
$var reg 8 W OUT [7:0] $end
$upscope $end
$scope module my_alu $end
$var wire 8 X DATA2 [7:0] $end
$var wire 3 Y SELECT [2:0] $end
$var wire 1 8 ZERO $end
$var wire 8 Z orOut [7:0] $end
$var wire 8 [ forwardOut [7:0] $end
$var wire 8 \ andOut [7:0] $end
$var wire 8 ] addOut [7:0] $end
$var wire 8 ^ DATA1 [7:0] $end
$var reg 8 _ RESULT [7:0] $end
$scope module addUnit $end
$var wire 8 ` DATA2 [7:0] $end
$var wire 8 a RESULT [7:0] $end
$var wire 8 b DATA1 [7:0] $end
$upscope $end
$scope module andUnit $end
$var wire 8 c DATA2 [7:0] $end
$var wire 8 d RESULT [7:0] $end
$var wire 8 e DATA1 [7:0] $end
$upscope $end
$scope module forwardUnit $end
$var wire 8 f DATA [7:0] $end
$var wire 8 g RESULT [7:0] $end
$upscope $end
$scope module orUnit $end
$var wire 8 h DATA2 [7:0] $end
$var wire 8 i RESULT [7:0] $end
$var wire 8 j DATA1 [7:0] $end
$upscope $end
$upscope $end
$scope module my_flowControl $end
$var wire 1 G BRANCH $end
$var wire 1 H JUMP $end
$var wire 1 7 OUT $end
$var wire 1 8 ZERO $end
$upscope $end
$scope module my_jumpbranchAdder $end
$var wire 8 k OFFSET [7:0] $end
$var wire 22 l signBits [21:0] $end
$var wire 32 m TARGET [31:0] $end
$var wire 32 n PC [31:0] $end
$upscope $end
$scope module my_pcAdder $end
$var wire 32 o PC [31:0] $end
$var wire 32 p PCplus4 [31:0] $end
$upscope $end
$scope module my_reg $end
$var wire 1 ) CLK $end
$var wire 8 q IN [7:0] $end
$var wire 3 r INADDRESS [2:0] $end
$var wire 8 s OUT1 [7:0] $end
$var wire 3 t OUT1ADDRESS [2:0] $end
$var wire 8 u OUT2 [7:0] $end
$var wire 3 v OUT2ADDRESS [2:0] $end
$var wire 1 * RESET $end
$var wire 1 w WRITE $end
$var integer 32 x i [31:0] $end
$upscope $end
$scope module my_twosComp $end
$var wire 8 y IN [7:0] $end
$var wire 8 z OUT [7:0] $end
$upscope $end
$scope module negationMUX $end
$var wire 8 { IN1 [7:0] $end
$var wire 8 | IN2 [7:0] $end
$var wire 1 N SELECT $end
$var reg 8 } OUT [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx }
bx |
bx {
bx z
bx y
bx x
xw
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
xN
xM
xL
xK
bx J
bx I
xH
xG
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
x8
x7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
b100000000 0
0/
bx .
0-
bx ,
bx +
1*
0)
bx (
0'
bx &
bx %
0$
bx #
0"
bx !
$end
#4
1)
#5
b1000 x
b0 %
b0 J
b0 o
0*
#6
b100 A
b100 T
b100 @
b100 S
b100 n
b100 p
#7
b0 ?
b0 t
b1 >
b1 v
b0 9
b0 r
b0 l
b0 I
b1001 D
b1001 U
b0 C
b0 k
b1001 &
b1001 2
#8
07
1w
b1001 B
b1001 W
b1001 X
b1001 `
b1001 c
b1001 f
b1001 h
0L
1K
0G
0H
0N
1M
b0 F
b0 Y
0)
#9
08
b1001 =
b1001 Q
b1001 q
b1001 (
b1001 ,
b1001 1
b1001 E
b1001 P
b1001 _
b0 5
b0 V
b0 }
b0x00x \
b0x00x d
bx1xx1 Z
bx1xx1 i
b1001 [
b1001 g
b0 !
b0 +
b0 4
b0 <
b0 ^
b0 b
b0 e
b0 j
b0 s
b0 ;
b0 u
b0 y
b0 {
b100 :
b100 R
b100 m
#10
b1001 Z
b1001 i
b0 \
b0 d
b0 6
b0 z
b0 |
#11
b1001 ]
b1001 a
#12
1)
#13
b100 %
b100 J
b100 o
#14
b1000 A
b1000 T
b1000 @
b1000 S
b1000 n
b1000 p
#15
b1 B
b1 W
b1 X
b1 `
b1 c
b1 f
b1 h
b1 9
b1 r
b1 D
b1 U
b1 C
b1 k
b10000000000000001 &
b10000000000000001 2
b1001 !
b1001 +
b1001 4
b1001 <
b1001 ^
b1001 b
b1001 e
b1001 j
b1001 s
#16
b1 =
b1 Q
b1 q
b1 (
b1 ,
b1 1
b1 E
b1 P
b1 _
b1 [
b1 g
b1 \
b1 d
0)
#17
b1100 :
b1100 R
b1100 m
b1010 ]
b1010 a
#20
1)
#21
b1000 %
b1000 J
b1000 o
#22
b1100 A
b1100 T
b1100 @
b1100 S
b1100 n
b1100 p
#23
b0 9
b0 r
b1 5
b1 V
b1 }
b1010 I
b0 C
b0 k
b1 ;
b1 u
b1 y
b1 {
b1010000000000000000000000001 &
b1010000000000000000000000001 2
#24
1/
1'
0w
b11111111 6
b11111111 z
b11111111 |
1"
0K
0M
0)
#28
1)
#32
0)
#36
1)
#40
0)
#44
1)
#48
0)
#52
1)
#56
0)
#60
1)
#64
0)
#68
0"
1)
0/
0'
#69
b1100 %
b1100 J
b1100 o
#70
b10000 A
b10000 T
b10000 @
b10000 S
b10000 n
b10000 p
#71
b0 >
b0 v
b1 9
b1 r
b1011 I
b0 D
b0 U
b1 C
b1 k
b1011000000010000000000000000 &
b1011000000010000000000000000 2
#72
1/
1'
b0 B
b0 W
b0 X
b0 `
b0 c
b0 f
b0 h
1"
1M
0)
#73
18
b0 =
b0 Q
b0 q
b0 (
b0 ,
b0 1
b0 E
b0 P
b0 _
b1001 5
b1001 V
b1001 }
b0 \
b0 d
b0 [
b0 g
b1001 ;
b1001 u
b1001 y
b1001 {
b10100 :
b10100 R
b10100 m
#74
b11110111 6
b11110111 z
b11110111 |
b1001 ]
b1001 a
#76
1)
#80
0)
#84
1)
#88
0)
#92
1)
#96
0)
#100
1)
#104
0)
#108
1)
#112
0)
#116
0"
1)
0/
0'
#117
b10000 %
b10000 J
b10000 o
#118
b10100 A
b10100 T
b10100 @
b10100 S
b10100 n
b10100 p
#119
b1 B
b1 W
b1 X
b1 `
b1 c
b1 f
b1 h
b1 >
b1 v
b10 9
b10 r
b1000 I
b1 D
b1 U
b10 C
b10 k
b1000000000100000000000000001 &
b1000000000100000000000000001 2
#120
08
b1 (
b1 ,
b1 1
b1 E
b1 P
b1 _
bx =
bx Q
bx q
1-
1'
0w
b1001 B
b1001 W
b1001 X
b1001 `
b1001 c
b1001 f
b1001 h
b1 \
b1 d
b1 [
b1 g
1L
1$
1K
0M
0)
#121
b1 B
b1 W
b1 X
b1 `
b1 c
b1 f
b1 h
b1001 (
b1001 ,
b1001 1
b1001 E
b1001 P
b1001 _
b1 5
b1 V
b1 }
b1001 \
b1001 d
b1001 [
b1001 g
b1 ;
b1 u
b1 y
b1 {
b11100 :
b11100 R
b11100 m
#122
b1 (
b1 ,
b1 1
b1 E
b1 P
b1 _
b1 \
b1 d
b1 [
b1 g
b11111111 6
b11111111 z
b11111111 |
#123
b1010 ]
b1010 a
#124
1)
#128
0)
#132
1)
#136
0)
#140
1)
#144
0)
#148
1)
#152
0)
#156
1)
#160
0)
#164
0$
1w
b1001 =
b1001 Q
b1001 q
1)
0-
0'
b1001 #
b1001 .
b1001 3
b1001 O
#165
b10100 %
b10100 J
b10100 o
#166
b11000 A
b11000 T
b11000 @
b11000 S
b11000 n
b11000 p
#167
b11 9
b11 r
b11 C
b11 k
b1000000000110000000000000001 &
b1000000000110000000000000001 2
#168
0w
1-
1'
1$
0)
#169
b100100 :
b100100 R
b100100 m
#172
1)
#176
0)
#180
1)
#184
0)
#188
1)
#192
0)
#196
1)
#200
0)
#204
1)
#208
0)
#212
0$
1w
1)
0-
0'
#213
b11000 %
b11000 J
b11000 o
#214
b11100 A
b11100 T
b11100 @
b11100 S
b11100 n
b11100 p
#215
b100 9
b100 r
b11 I
b100 C
b100 k
b11000001000000000000000001 &
b11000001000000000000000001 2
#216
b11111111 B
b11111111 W
b11111111 X
b11111111 `
b11111111 c
b11111111 f
b11111111 h
b1010 =
b1010 Q
b1010 q
b11111111 5
b11111111 V
b11111111 }
b1010 (
b1010 ,
b1010 1
b1010 E
b1010 P
b1010 _
0L
1N
b1 F
b1 Y
0)
#217
b1001 \
b1001 d
b11111111 Z
b11111111 i
b11111111 [
b11111111 g
b101100 :
b101100 R
b101100 m
#218
b1000 =
b1000 Q
b1000 q
b1000 (
b1000 ,
b1000 1
b1000 E
b1000 P
b1000 _
b1000 ]
b1000 a
#220
1)
#221
b11100 %
b11100 J
b11100 o
#222
b100000 A
b100000 T
b100000 @
b100000 S
b100000 n
b100000 p
#223
b10 >
b10 v
b1011 I
b10 D
b10 U
b1011000001000000000000000010 &
b1011000001000000000000000010 2
#224
b11111111 =
b11111111 Q
b11111111 q
1/
1'
0w
b1 5
b1 V
b1 }
b10 B
b10 W
b10 X
b10 `
b10 c
b10 f
b10 h
b11111111 (
b11111111 ,
b11111111 1
b11111111 E
b11111111 P
b11111111 _
1"
0K
0N
1M
b0 F
b0 Y
b110000 :
b110000 R
b110000 m
0)
#225
b10 =
b10 Q
b10 q
b10 (
b10 ,
b10 1
b10 E
b10 P
b10 _
b1001 5
b1001 V
b1001 }
b0 \
b0 d
b1011 Z
b1011 i
b10 [
b10 g
b1001 ;
b1001 u
b1001 y
b1001 {
#226
b11110111 6
b11110111 z
b11110111 |
b1011 ]
b1011 a
#228
1)
#232
0)
#236
1)
#240
0)
#244
1)
#248
0)
#252
1)
#256
0)
#260
1)
#264
0)
#268
0"
1)
0/
0'
#269
b100000 %
b100000 J
b100000 o
#270
b100100 A
b100100 T
b100100 @
b100100 S
b100100 n
b100100 p
#271
b101 9
b101 r
b1001 I
b101 C
b101 k
b1001000001010000000000000010 &
b1001000001010000000000000010 2
#272
b1001 =
b1001 Q
b1001 q
1-
1'
0w
1L
1$
1K
0)
#273
b111000 :
b111000 R
b111000 m
#276
1)
#280
0)
#284
1)
#288
0)
#292
1)
#296
0)
#300
1)
#304
0)
#308
1)
#312
0)
#316
0$
1w
1)
0-
0'
#317
b100100 %
b100100 J
b100100 o
#318
b101000 A
b101000 T
b101000 @
b101000 S
b101000 n
b101000 p
#319
b100000 B
b100000 W
b100000 X
b100000 `
b100000 c
b100000 f
b100000 h
b0 >
b0 v
b100 9
b100 r
b1011 I
b100000 D
b100000 U
b100 C
b100 k
b1011000001000000000000100000 &
b1011000001000000000000100000 2
#320
b100000 (
b100000 ,
b100000 1
b100000 E
b100000 P
b100000 _
1/
1'
0w
b101001 Z
b101001 i
b100000 [
b100000 g
1"
0K
0)
#321
b101001 ]
b101001 a
#324
1)
#328
0)
#332
1)
#336
0)
#340
1)
#344
0)
#348
1)
#352
0)
#356
1)
#360
0)
#364
0"
1)
0/
0'
#365
b101000 %
b101000 J
b101000 o
#366
b101100 A
b101100 T
b101100 @
b101100 S
b101100 n
b101100 p
#367
b110 9
b110 r
b1001 I
b110 C
b110 k
b1001000001100000000000100000 &
b1001000001100000000000100000 2
#368
1-
1'
0w
1$
1K
0)
#369
b1000100 :
b1000100 R
b1000100 m
#372
1)
#376
0)
#380
1)
#384
0)
#388
1)
#392
0)
#396
1)
#400
0)
#404
1)
#408
0)
#412
0$
1w
1)
0-
0'
#413
b101100 %
b101100 J
b101100 o
#414
b110000 A
b110000 T
b110000 @
b110000 S
b110000 n
b110000 p
#415
bx ?
bx t
bx B
bx W
bx X
bx `
bx c
bx f
bx h
bx >
bx v
bx 9
bx r
bx l
bx I
bx D
bx U
bx C
bx k
bx &
bx 2
#416
x8
bx (
bx ,
bx 1
bx E
bx P
bx _
b0x00x \
b0x00x d
bx1xx1 Z
bx1xx1 i
bx [
bx g
0)
#417
bx 5
bx V
bx }
bx !
bx +
bx 4
bx <
bx ^
bx b
bx e
bx j
bx s
bx ]
bx a
bx ;
bx u
bx y
bx {
bx :
bx R
bx m
#418
bx Z
bx i
bx \
bx d
bx 6
bx z
bx |
#420
1)
#421
b110000 %
b110000 J
b110000 o
#422
b110100 A
b110100 T
b110100 @
b110100 S
b110100 n
b110100 p
#424
0)
#428
1)
#429
b110100 %
b110100 J
b110100 o
#430
b111000 A
b111000 T
b111000 @
b111000 S
b111000 n
b111000 p
#432
0)
#436
1)
#437
b111000 %
b111000 J
b111000 o
#438
b111100 A
b111100 T
b111100 @
b111100 S
b111100 n
b111100 p
#440
0)
#444
1)
#445
b111100 %
b111100 J
b111100 o
#446
b1000000 A
b1000000 T
b1000000 @
b1000000 S
b1000000 n
b1000000 p
#448
0)
#452
1)
#453
b1000000 %
b1000000 J
b1000000 o
#454
b1000100 A
b1000100 T
b1000100 @
b1000100 S
b1000100 n
b1000100 p
#456
0)
#460
1)
#461
b1000100 %
b1000100 J
b1000100 o
#462
b1001000 A
b1001000 T
b1001000 @
b1001000 S
b1001000 n
b1001000 p
#464
0)
#468
1)
#469
b1001000 %
b1001000 J
b1001000 o
#470
b1001100 A
b1001100 T
b1001100 @
b1001100 S
b1001100 n
b1001100 p
#472
0)
#476
1)
#477
b1001100 %
b1001100 J
b1001100 o
#478
b1010000 A
b1010000 T
b1010000 @
b1010000 S
b1010000 n
b1010000 p
#480
0)
#484
1)
#485
b1010000 %
b1010000 J
b1010000 o
#486
b1010100 A
b1010100 T
b1010100 @
b1010100 S
b1010100 n
b1010100 p
#488
0)
#492
1)
#493
b1010100 %
b1010100 J
b1010100 o
#494
b1011000 A
b1011000 T
b1011000 @
b1011000 S
b1011000 n
b1011000 p
#496
0)
#500
1)
#501
b1011000 %
b1011000 J
b1011000 o
#502
b1011100 A
b1011100 T
b1011100 @
b1011100 S
b1011100 n
b1011100 p
#504
0)
#505
